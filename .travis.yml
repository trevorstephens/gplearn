language: python

env:
  matrix:
    - PYTHON="3.5" SKLEARN="LATEST" COVERAGE="true"
    - PYTHON="3.6" SKLEARN="0.20.0" JOBLIB="0.11"
    - PYTHON="3.6" SKLEARN="LATEST"
    - PYTHON="3.7" SKLEARN="LATEST"

install:
  - set -e
  - deactivate
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - if [[ "$SKLEARN" == "LATEST" ]]; then
      conda create -q -n testenv -y python=$PYTHON pip nose scikit-learn joblib pandas cython;
    else
      conda create -q -n testenv -y python=$PYTHON pip nose scikit-learn=$SKLEARN joblib=$JOBLIB pandas cython;
    fi
  - source activate testenv
  - if [[ "$COVERAGE" == "true" ]]; then
      pip install coverage coveralls;
    fi
  - python --version
  - python -c "import numpy; print('numpy %s' % numpy.__version__)"
  - python -c "import scipy; print('scipy %s' % scipy.__version__)"
  - python -c "import joblib; print('joblib %s' % joblib.__version__)"
  - python -c "import sklearn; print('sklearn %s' % sklearn.__version__)"
  - python setup.py install

script:
  - set -e
  - if [[ "$COVERAGE" == "true" ]]; then
      nosetests -s -v --with-coverage --cover-package=gplearn;
    else
      nosetests -s -v gplearn;
    fi

after_success:
    - if [[ "$COVERAGE" == "true" ]]; then coveralls || echo "failed"; fi
